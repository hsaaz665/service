apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nodejs-microservice-template
  title: Node.js Microservice
  description: Create a new Node.js microservice with Express and MongoDB
  tags:
    - recommended
    - nodejs
    - microservice
    - express
    - mongodb
spec:
  owner: team-platform
  type: service
  parameters:
    - title: Basic Information
      required:
        - name
        - description
        - owner
      properties:
        name:
          title: Service Name
          type: string
          description: Unique name for your service
          pattern: '^[a-z0-9-]+$'
          ui:autofocus: true
          ui:help: 'Use lowercase letters, numbers, and hyphens only'
        description:
          title: Description
          type: string
          description: Short description of your service
        owner:
          title: Owner
          type: string
          description: Team or person responsible for this service
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: [Group, User]
        system:
          title: System
          type: string
          description: System this service belongs to
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: System
    
    - title: Repository Information
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
              - gitlab.com
    
    - title: Service Configuration
      properties:
        port:
          title: Port
          type: integer
          description: Port number for the service
          default: 3000
          minimum: 3000
          maximum: 9999
        database:
          title: Database Type
          type: string
          description: Choose your database
          default: mongodb
          enum:
            - mongodb
            - postgresql
            - mysql
          enumNames:
            - MongoDB
            - PostgreSQL
            - MySQL
        addDocker:
          title: Include Docker
          type: boolean
          description: Add Dockerfile and docker-compose
          default: true
        addTests:
          title: Include Tests
          type: boolean
          description: Add Jest testing framework
          default: true

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          port: ${{ parameters.port }}
          database: ${{ parameters.database }}
          addDocker: ${{ parameters.addDocker }}
          addTests: ${{ parameters.addTests }}
    
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: 'This is ${{ parameters.name }}'
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        gitCommitMessage: 'Initial commit from Backstage template'
        gitAuthorName: 'Backstage'
        gitAuthorEmail: 'backstage@example.com'
    
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
